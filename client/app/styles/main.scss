$icon-font-path: "/bower_components/sass-bootstrap/fonts/";

@import 'sass-bootstrap/lib/bootstrap';

.browsehappy {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* Space out content a bit */
body {
    padding: 80px 0;
}

.container-wide{
    width: 100%;
    & .row {
        width: 100% !important;
    }
}

.list{
    background: white;
    white-space: nowrap;

    & .list-header {
        text-overflow: ellipsis;
        overflow: hidden;
        background: #fff;
        z-index: 1;
    }

    &:hover{
        & .list-entry {
            overflow: visible;
            z-index: 1;
        }
        & .list-header {
            overflow: visible;
            z-index: 1;
        }
    }

    & .list-entry {
        background: #fefefe;
        overflow: hidden;
        & .offset{
            background: #eeeeee;
            text-align: right;
        }
        & .text{
            position: relative;
            & span{
                position: absolute;
                background: #fefefe;
                z-index: 1;
            }
        }
    }

    &:hover{
        & .list-entry {
            overflow: visible;
            z-index: 1;
        }
    }

    & .list-entry.list-entry-odd {
        background: #fafafa;
        & .offset {
            background: #eaeaea;
        }
        & .text span{
            background: #fafafa;
        }
    }
    & .active .list-entry {
        font-weight: bold;
    }
}

.highlight{
    cursor: normal;
    & .hl-line {
        position: relative;
        & .hl-data {
            background: #fafafa;
            font-family: monospace;
            white-space: pre;
            display: block;
            word-break: break-all;
            word-wrap: break-word;
        }
    }
    & .hl-info {
        cursor: pointer;
        position: relative;
        & .hl-details {
            position: absolute;
            left: 0;
            width: 100%;
            background: white;
            top: 30px;
            padding: 5px;
            border: 1px solid #f0f0f0;
            display: block;
            z-index: 1;
            visibility: hidden;
            & .row div:nth-child(1){
                overflow: hidden;
                text-overflow: ellipsis;
            }
        }
        &:hover{
            background: #fafafa;
            & .hl-details{
                visibility: visible;
            }
        }
    }
    & .ui-scrollfix{
        position: fixed;
        top: 51px;
        line-height: 2em;
        width: 18%;
        background: white;
        display: block;
        z-index: 1;
        border-bottom: 1px solid;
    }
    & .hll { background-color: #ffffcc }
    & .c { color: #408080; font-style: italic } /* Comment */
    & .err { border: 1px solid #FF0000 } /* Error */
    & .k { color: #008000; font-weight: bold } /* Keyword */
    & .o { color: #666666 } /* Operator */
    & .cm { color: #408080; font-style: italic } /* Comment.Multiline */
    & .cp { color: #BC7A00 } /* Comment.Preproc */
    & .c1 { color: #408080; font-style: italic } /* Comment.Single */
    & .cs { color: #408080; font-style: italic } /* Comment.Special */
    & .gd { color: #A00000 } /* Generic.Deleted */
    & .ge { font-style: italic } /* Generic.Emph */
    & .gr { color: #FF0000 } /* Generic.Error */
    & .gh { color: #000080; font-weight: bold } /* Generic.Heading */
    & .gi { color: #00A000 } /* Generic.Inserted */
    & .go { color: #888888 } /* Generic.Output */
    & .gp { color: #000080; font-weight: bold } /* Generic.Prompt */
    & .gs { font-weight: bold } /* Generic.Strong */
    & .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
    & .gt { color: #0044DD } /* Generic.Traceback */
    & .kc { color: #008000; font-weight: bold } /* Keyword.Constant */
    & .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */
    & .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */
    & .kp { color: #008000 } /* Keyword.Pseudo */
    & .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */
    & .kt { color: #B00040 } /* Keyword.Type */
    & .m { color: #666666 } /* Literal.Number */
    & .s { color: #BA2121 } /* Literal.String */
    & .na { color: #7D9029 } /* Name.Attribute */
    & .nb { color: #008000 } /* Name.Builtin */
    & .nc { color: #0000FF; font-weight: bold } /* Name.Class */
    & .no { color: #880000 } /* Name.Constant */
    & .nd { color: #AA22FF } /* Name.Decorator */
    & .ni { color: #999999; font-weight: bold } /* Name.Entity */
    & .ne { color: #D2413A; font-weight: bold } /* Name.Exception */
    & .nf { color: #0000FF } /* Name.Function */
    & .nl { color: #A0A000 } /* Name.Label */
    & .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */
    & .nt { color: #008000; font-weight: bold } /* Name.Tag */
    & .nv { color: #19177C } /* Name.Variable */
    & .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */
    & .w { color: #bbbbbb } /* Text.Whitespace */
    & .mf { color: #666666 } /* Literal.Number.Float */
    & .mh { color: #666666 } /* Literal.Number.Hex */
    & .mi { color: #666666 } /* Literal.Number.Integer */
    & .mo { color: #666666 } /* Literal.Number.Oct */
    & .sb { color: #BA2121 } /* Literal.String.Backtick */
    & .sc { color: #BA2121 } /* Literal.String.Char */
    & .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */
    & .s2 { color: #BA2121 } /* Literal.String.Double */
    & .se { color: #BB6622; font-weight: bold } /* Literal.String.Escape */
    & .sh { color: #BA2121 } /* Literal.String.Heredoc */
    & .si { color: #BB6688; font-weight: bold } /* Literal.String.Interpol */
    & .sx { color: #008000 } /* Literal.String.Other */
    & .sr { color: #BB6688 } /* Literal.String.Regex */
    & .s1 { color: #BA2121 } /* Literal.String.Single */
    & .ss { color: #19177C } /* Literal.String.Symbol */
    & .bp { color: #008000 } /* Name.Builtin.Pseudo */
    & .vc { color: #19177C } /* Name.Variable.Class */
    & .vg { color: #19177C } /* Name.Variable.Global */
    & .vi { color: #19177C } /* Name.Variable.Instance */
    & .il { color: #666666 } /* Literal.Number.Integer.Long */
}
